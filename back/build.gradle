/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'org.springframework.boot' version '2.1.12.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'

    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'war'
    id 'ear'
    id 'eclipse'
    id 'eclipse-wtp'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

//application {
//  mainClassName = "su.fontru.RestAPI"
//}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-data-rest'
  // implementation 'org.springframework.boot:spring-boot-starter-security'
  compileOnly 'org.projectlombok:lombok'
  runtimeOnly 'org.postgresql:postgresql'

  annotationProcessor 'org.projectlombok:lombok'


  testImplementation 'junit:junit:4.12'
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation 'org.springframework.security:spring-security-test'
}

test {
  useJUnitPlatform()
}

war { 
  from 'src/main/java' 
}

ear {
  appDirName 'src/main/java'
  libDirName ''
  deploymentDescriptor {  // custom entries for application.xml:
//      fileName = "application.xml"  // same as the default value
//      version = "6"  // same as the default value
        applicationName = "ejbTest"
        initializeInOrder = true
        displayName = "EJB TEST"  // defaults to project.name
        // defaults to project.description if not set
        description = "EJB de teste"
//      libraryDirectory = "APP-INF/lib"  // not needed, above libDirName setting does this
//      module("my.jar", "java")  // won't deploy as my.jar isn't deploy dependency
//      webModule("my.war", "/")  // won't deploy as my.war isn't deploy dependency
        /*
        securityRole "admin"
        securityRole "superadmin"
        */
        /*
        withXml { provider -> // add a custom node to the XML
            provider.asNode().appendNode("data-source", "my/data/source")
        }
        */
  }

}
